(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{517:function(t,e,s){"use strict";s.r(e);var a=s(34),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_7-2-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-3"}},[t._v("#")]),t._v(" 7.2.3")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#message-data-objects"}},[t._v("Message Data Objects")])]),s("li",[s("a",{attrs:{href:"#sqs-visibility-timeout"}},[t._v("SQS Visibility Timeout")])]),s("li",[s("a",{attrs:{href:"#request-client-pipe-configuration"}},[t._v("Request Client Pipe Configuration")])]),s("li",[s("a",{attrs:{href:"#system-text-json"}},[t._v("System.Text.Json")])]),s("li",[s("a",{attrs:{href:"#raw-xml-serialization"}},[t._v("Raw XML Serialization")])]),s("li",[s("a",{attrs:{href:"#non-generic-addconsumer-addsaga-methods"}},[t._v("Non-Generic AddConsumer, AddSaga methods")])]),s("li",[s("a",{attrs:{href:"#miscellaneous"}},[t._v("Miscellaneous")])])])]),s("p"),t._v(" "),s("blockquote",[s("p",[t._v("Release notes from 7.2.1 and 7.2.2 were not created, those releases were mostly bug fixes and stability improvements.")])]),t._v(" "),s("h3",{attrs:{id:"message-data-objects"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#message-data-objects"}},[t._v("#")]),t._v(" Message Data Objects")]),t._v(" "),s("p",[t._v("Originally, message data (claim check) only supported "),s("code",[t._v("byte[]")]),t._v(" and "),s("code",[t._v("string")]),t._v(", with "),s("code",[t._v("Stream")]),t._v(" added. With this release, it is now possible to specify an object type "),s("code",[t._v("T")]),t._v(". For instance:")]),t._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ValidateOrder")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[t._v("Guid")]),t._v(" CorrelationId "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[t._v("MessageData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Order"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" Order "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("MassTransit will serialize the "),s("code",[t._v("Order")]),t._v(" object, and transfer that object as message data (which may be inline, if the size is below the threshold). The object "),s("code",[t._v("T")]),t._v(" must be a valid message type, to meet the serialization requirements. The message data can be initialized by passed the appropriate type via the message initializer.")]),t._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" endpoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Send")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ValidateOrder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    InVar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CorrelationId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    Order "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        OrderId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" orderId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        BigProperty "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" bigProperty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// etc...")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"sqs-visibility-timeout"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sqs-visibility-timeout"}},[t._v("#")]),t._v(" SQS Visibility Timeout")]),t._v(" "),s("p",[t._v("MassTransit will now adjust the visibility timeout of messages until consumers complete, extending the timeout at regular intervals automatically to prevent message re-delivery after the default timeout (typically 30 seconds).")]),t._v(" "),s("h3",{attrs:{id:"request-client-pipe-configuration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#request-client-pipe-configuration"}},[t._v("#")]),t._v(" Request Client Pipe Configuration")]),t._v(" "),s("p",[t._v("The request client has new overloads to set headers, etc. when calling "),s("code",[t._v("GetResponse<T>")]),t._v(". For example:")]),t._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" client"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetResponse")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("B"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("A")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TimeToLive "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" TimeSpan"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("FromMinutes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CancellationToken"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"system-text-json"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#system-text-json"}},[t._v("#")]),t._v(" System.Text.Json")]),t._v(" "),s("p",[t._v("While Newtonsoft.JSON is still the default serializer, experimental support has been added for "),s("code",[t._v("System.Text.Json")]),t._v(". By default, it's a separate serialization media type to avoid compatibility issues. However, it can be configured to replace the default media type by configuring the bus to use "),s("code",[t._v("System.Text.Json")]),t._v(" only.")]),t._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("UsingRabbitMQ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cfg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    cfg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("UseSystemTextJsonOnly")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Due to limitations in "),s("code",[t._v("System.Text.Json")]),t._v(", it is not 100% compatible with Newtonsoft.JSON. But in most cases, it works. It's clearly some edge message types that are unable to be serialized and/or deserialized.")]),t._v(" "),s("h3",{attrs:{id:"raw-xml-serialization"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#raw-xml-serialization"}},[t._v("#")]),t._v(" Raw XML Serialization")]),t._v(" "),s("p",[t._v("To complement the built-in raw JSON support, a new raw XML serializer has been added.")]),t._v(" "),s("h3",{attrs:{id:"non-generic-addconsumer-addsaga-methods"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#non-generic-addconsumer-addsaga-methods"}},[t._v("#")]),t._v(" Non-Generic AddConsumer, AddSaga methods")]),t._v(" "),s("p",[t._v("The non-generic methods such as "),s("code",[t._v("AddConsumer")]),t._v(" and "),s("code",[t._v("AddSaga")]),t._v(" can now configure "),s("code",[t._v("Endpoint")]),t._v(" details. Previously this was only available on the generic "),s("code",[t._v("AddConsumer<T>")]),t._v(" style methods. The bulk methods remain unchanged.")]),t._v(" "),s("h3",{attrs:{id:"miscellaneous"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#miscellaneous"}},[t._v("#")]),t._v(" Miscellaneous")]),t._v(" "),s("ul",[s("li",[t._v("FutureState storage for Entity Framework Core now works with multiple "),s("code",[t._v("DbContext")]),t._v(" types in the container.")]),t._v(" "),s("li",[t._v("Better support for SQS FIFO queues/topics")]),t._v(" "),s("li",[t._v("Optimistic concurrency support for job consumer saga repository (EFCore)")]),t._v(" "),s("li",[t._v("Fixed weird shutdown issue with ActiveMQ consumers draining the queue")]),t._v(" "),s("li",[t._v("Fixed "),s("em",[t._v("tokenId")]),t._v(" header issue with Azure Service Bus scheduler that prevented state machine scheduled messages from being properly correlated to the job service sagas")]),t._v(" "),s("li",[t._v("Changed checkpoint logic for Event Hub and Kafka to update after a timeout, not just a message count")])])])}),[],!1,null,null,null);e.default=n.exports}}]);