(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{513:function(t,e,s){"use strict";s.r(e);var n=s(34),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_7-1-6"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-6"}},[t._v("#")]),t._v(" 7.1.6")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#iconfigurereceiveendpoint"}},[t._v("IConfigureReceiveEndpoint")])]),s("li",[s("a",{attrs:{href:"#prefetchcount-and-concurrentmessagelimit"}},[t._v("PrefetchCount and ConcurrentMessageLimit")])]),s("li",[s("a",{attrs:{href:"#azure-service-bus-subscription-endpoint-configurator"}},[t._v("Azure Service Bus Subscription Endpoint Configurator")])]),s("li",[s("a",{attrs:{href:"#subscription-endpoint-changes"}},[t._v("Subscription Endpoint Changes")])]),s("li",[s("a",{attrs:{href:"#transport-reconnection"}},[t._v("Transport Reconnection")])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"iconfigurereceiveendpoint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#iconfigurereceiveendpoint"}},[t._v("#")]),t._v(" IConfigureReceiveEndpoint")]),t._v(" "),s("p",[t._v("It is now easy to apply configuration to all receive endpoints when using "),s("code",[t._v("ConfigureEndpoints")]),t._v(" or connecting a receive endpoint using the new "),s("code",[t._v("IReceiveEndpointConnector")]),t._v(". Depending upon the container, register a class that implements "),s("code",[t._v("IConfigureReceiveEndpoint")]),t._v(", and it will be used automatically. If multiple instances are registered, they will be executed in registration order (or should, depending on the container).")]),t._v(" "),s("p",[t._v("An example class is shown below:")]),t._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConfigureMyEndpoint")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token type-list"}},[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IConfigureReceiveEndpoint")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Configure")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("string")])]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IReceiveEndpointConfigurator")]),t._v(" configurator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        configurator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QueueAttributes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"some-key"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"some-value"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("The "),s("em",[t._v("name")]),t._v(" argument is the queue name being configured.")]),t._v(" "),s("p",[t._v("To register the object, use:")]),t._v(" "),s("h4",{attrs:{id:"microsoft-dependency-injection"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#microsoft-dependency-injection"}},[t._v("#")]),t._v(" Microsoft Dependency Injection")]),t._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[t._v("services"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AddTransient")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("IConfigureReceiveEndpoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ConfigureMyEndpoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"autofac"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#autofac"}},[t._v("#")]),t._v(" Autofac")]),t._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[t._v("builder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("RegisterType")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ConfigureMyEndpoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("As")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("IConfigureReceiveEndpoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"castle-windsor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#castle-windsor"}},[t._v("#")]),t._v(" Castle Windsor")]),t._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[t._v("container"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Register")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Component"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("For")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("IConfigureReceiveEndpoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ImplementedBy")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ConfigureMyEndpoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"simple-injector"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#simple-injector"}},[t._v("#")]),t._v(" Simple Injector")]),t._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[t._v("Container"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Collection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Register")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("IConfigureReceiveEndpoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token type-expression class-name"}},[t._v("ConfigureMyEndpoint")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"structuremap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#structuremap"}},[t._v("#")]),t._v(" StructureMap")]),t._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[t._v("expression"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("For")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("IConfigureReceiveEndpoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Add")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ConfigureMyEndpoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"prefetchcount-and-concurrentmessagelimit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prefetchcount-and-concurrentmessagelimit"}},[t._v("#")]),t._v(" PrefetchCount and ConcurrentMessageLimit")]),t._v(" "),s("p",[t._v("The PrefetchCount and ConcurrentMessageLimit can now be specified directly on "),s("code",[t._v("IReceiveEndpointConfigurator")]),t._v(", eliminating the need to cast to a transport-specific interface. The same values can also be set on "),s("code",[t._v("IBusFactoryConfigurator")]),t._v(", which will apply to all receive endpoints.")]),t._v(" "),s("p",[t._v("The PrefetchCount is passed to the transport where supported, otherwise it is used when reading messages from the broker.")]),t._v(" "),s("p",[t._v("The ConcurrentMessageLimit is only passed to transports that support it (currently, Azure Service Bus), and is otherwise used to control how many messages are dispatched concurrently on the receive endpoint.")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("ConcurrentMessageLimit")]),t._v(" is not initialized by default, and does not need to be specified. If no limit is specified, which is the default, it will equal the PrefetchCount.")])]),t._v(" "),s("h2",{attrs:{id:"azure-service-bus-subscription-endpoint-configurator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#azure-service-bus-subscription-endpoint-configurator"}},[t._v("#")]),t._v(" Azure Service Bus Subscription Endpoint Configurator")]),t._v(" "),s("p",[t._v("A new interface, "),s("code",[t._v("ISubscriptionEndpointConnector")]),t._v(", was added. It is similar to the recently added "),s("code",[t._v("IReceiveEndpointConnector")]),t._v(" but is specific to Azure Service Bus for connecting subscription endpoints (which are on a specific topic).")]),t._v(" "),s("p",[t._v("To use the new interface, look at the example below:")]),t._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")])]),t._v(" connector "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" provider"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetRequiredService")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ISubscriptionEndpointConnector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")])]),t._v(" handle "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" connector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ConnectSubscriptionEndpoint")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("SomeMessageType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my-sub-name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("The message type is used to generate the topic name based on the bus message topology, the same used for connecting message types for consumers on receive endpoints.")])]),t._v(" "),s("h2",{attrs:{id:"subscription-endpoint-changes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#subscription-endpoint-changes"}},[t._v("#")]),t._v(" Subscription Endpoint Changes")]),t._v(" "),s("p",[t._v("Prior to this version, separate queues were created for subscription endpoints to store "),s("em",[t._v("_error")]),t._v(" and "),s("em",[t._v("_skipped")]),t._v(" messages. By default, these messages will be dead-lettered instead, and moved to the Azure Service Bus dead-letter queue related to the subscription. The previous approach was a hack, so this should be "),s("em",[t._v("better")]),t._v(" – or maybe it won't be better.")]),t._v(" "),s("h2",{attrs:{id:"transport-reconnection"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transport-reconnection"}},[t._v("#")]),t._v(" Transport Reconnection")]),t._v(" "),s("p",[t._v("There was a regression in 7.1.4, in which publishing/sending messages when the broker was not connected would immediately throw an exception. This has been resolved, and hopefully in a much better way. The send pipeline now uses the same retry policy as the receive transport, but on its own pipeline. Previously (in version 7.1.3 and earlier anyway), it was using the receive transport pipeline to reconnect. This change should hopefully smooth out some threading issues.")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("It is important to pass a "),s("code",[t._v("CancellationToken")]),t._v(" to "),s("code",[t._v("Publish")]),t._v(" or "),s("code",[t._v("Send")]),t._v(", to specify a timeout or whatever, or the calls will wait until the broker is available.")])])])}),[],!1,null,null,null);e.default=a.exports}}]);