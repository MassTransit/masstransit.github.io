(window.webpackJsonp=window.webpackJsonp||[]).push([[119],{569:function(e,t,a){"use strict";a.r(t);var s=a(34),i=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"correlating-messages"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#correlating-messages"}},[e._v("#")]),e._v(" Correlating messages")]),e._v(" "),a("p",[e._v("In a distributed message-based system, message correlation is very important. Since operations are potentially executing across hundreds of nodes, the ability to correlate different messages to build a path through the system is absolutely necessary for engineers to troubleshoot problems.")]),e._v(" "),a("p",[e._v("The headers on the message envelope provided by MassTransit already make it easy to specify correlation values. In fact, most are setup by default if not specified by the developer.")]),e._v(" "),a("p",[e._v("MassTransit provides the interface "),a("code",[e._v("CorrelatedBy<T>")]),e._v(", which can be used to setup a default correlationId. This is used by sagas as well, since all sagas have a unique "),a("code",[e._v("CorrelationId")]),e._v(" for each instance of the saga. If a message implements "),a("code",[e._v("CorrelatedBy<Guid>")]),e._v(", it will automatically be directed to the saga instance with the matching identifier. If a new saga instance is created by the event, it will be assigned the "),a("code",[e._v("CorrelationId")]),e._v(" from the initiating message.")]),e._v(" "),a("p",[e._v("For message types that have a correlation identifier, but are not using the "),a("code",[e._v("CorrelatedBy")]),e._v(" interface, it is possible to declare the identifier for the message type and MassTransit will use that identifier by default for correlation.")]),e._v(" "),a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[e._v("MessageCorrelation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token generic-method"}},[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("UseCorrelationId")]),a("span",{pre:!0,attrs:{class:"token generic class-name"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("YourMessageClass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=>")]),e._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("SomeGuidValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),a("p",[e._v("This should be called before you start the bus. We currently recommend that you put all of these in a static method for easy grouping and then call it at the beginning of the MassTransit configuration block.")])]),e._v(" "),a("p",[e._v("Most transactions in a system will end up being logged and wide scale correlation is likely. Therefore, the use of consistent correlation identifiers is recommended. In fact, using a "),a("code",[e._v("Guid")]),e._v(" type is highly recommended. MassTransit uses the "),a("a",{attrs:{href:"https://www.nuget.org/packages/NewId",target:"_blank",rel:"noopener noreferrer"}},[e._v("NewId"),a("OutboundLink")],1),e._v(" library to generate identifiers that are unique and sequential that are represented as a "),a("code",[e._v("Guid")]),e._v(". The identifiers are clustered-index friendly, being ordered in a way that SQL Server can efficiently insert them into a database with the "),a("em",[e._v("uniqueidentifier")]),e._v(" as the primary key. Just use "),a("code",[e._v("NewId.NextGuid()")]),e._v(" to generate an identifier -- it's fast, fun, and all your friends are doing it.")]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),a("p",[e._v("So, what does correlated actually mean? In short it means that this message is a part of a larger conversation. For instance, you may have a message that says "),a("i",[e._v("New Order (Item:Hammers; Qty:22; OrderNumber:45)")]),e._v(" and there may be another message that is a response to that message that says "),a("i",[e._v("Order Allocated(OrderNumber:45)")]),e._v(". In this case, the order number is acting as your correlation identifier, it ties the messages together.")])]),e._v(" "),a("h3",{attrs:{id:"correlation-by-convention"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#correlation-by-convention"}},[e._v("#")]),e._v(" Correlation by convention")]),e._v(" "),a("p",[e._v("In addition to the explicit "),a("code",[e._v("CorrelatedBy<T>")]),e._v(" interface, a convention-based correlation is supported. If the message contract has a property named "),a("code",[e._v("CorrelationId")]),e._v(", "),a("code",[e._v("CommandId")]),e._v(", or "),a("code",[e._v("EventId")]),e._v(", the correlationId header is automatically populated on Send or Publish. It can also be manually specified using the "),a("code",[e._v("SendContext")]),e._v(".")]),e._v(" "),a("p",[e._v("Bear in mind that sagas default "),a("code",[e._v("CorrelateById()")]),e._v(" only support messages where the explicit "),a("code",[e._v("CorrelatedBy<Guid>")]),e._v(" interface is implemented. However, the header is still useful if you do not use sagas, for example for message flow analysis and debugging.")]),e._v(" "),a("h2",{attrs:{id:"tracing-conversations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tracing-conversations"}},[e._v("#")]),e._v(" Tracing conversations")]),e._v(" "),a("p",[e._v("There are several other built-in message headers that can be used to correlate messages. However, it is also completely acceptable to add your own custom properties to the message contract for correlation.")]),e._v(" "),a("p",[e._v("In addition to the correlationId, the default headers include:")]),e._v(" "),a("h4",{attrs:{id:"requestid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requestid"}},[e._v("#")]),e._v(" RequestId")]),e._v(" "),a("p",[e._v("When using the "),a("code",[e._v("RequestClient")]),e._v(", or the request/response message handling of MassTransit, each request is assigned a unique "),a("code",[e._v("RequestId")]),e._v(". When the message is received by a consumer, the response message sent by the "),a("code",[e._v("Respond")]),e._v(" method (on the "),a("code",[e._v("ConsumeContext")]),e._v(") is assigned the same "),a("code",[e._v("RequestId")]),e._v(" so that it can be correlated by the request client. This header should not typically be set by the consumer, as it is handled automatically.")]),e._v(" "),a("h4",{attrs:{id:"conversationid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#conversationid"}},[e._v("#")]),e._v(" ConversationId")]),e._v(" "),a("p",[e._v("The conversation is created by the first message that is sent or published, in which no existing context is available (such as when a message is sent or published by using "),a("code",[e._v("IBus.Send")]),e._v(" or "),a("code",[e._v("IBus.Publish")]),e._v("). If an existing context is used to send or publish a message, the "),a("code",[e._v("ConversationId")]),e._v(" is copied to the new message, ensuring that a set of messages within the same "),a("em",[e._v("conversation")]),e._v(" have the same identifier.")]),e._v(" "),a("h4",{attrs:{id:"initiatorid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#initiatorid"}},[e._v("#")]),e._v(" InitiatorId")]),e._v(" "),a("p",[e._v("When a message is created within the context of an existing message, such as in a consumer, a saga, etc., the "),a("code",[e._v("CorrelationId")]),e._v(" of the message (if available, otherwise the "),a("code",[e._v("MessageId")]),e._v(" may be used) is copied to the "),a("code",[e._v("InitiatorId")]),e._v(" header. This makes it possible to combine a chain of messages into a graph of producers and consumers.")]),e._v(" "),a("h4",{attrs:{id:"messageid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#messageid"}},[e._v("#")]),e._v(" MessageId")]),e._v(" "),a("p",[e._v("When a message is sent or published, this header is automatically generated for the message.")])])}),[],!1,null,null,null);t.default=i.exports}}]);